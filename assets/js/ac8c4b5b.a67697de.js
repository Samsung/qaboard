"use strict";(self.webpackChunkApache_2_0=self.webpackChunkApache_2_0||[]).push([[3584],{3905:function(e,n,t){t.d(n,{Zo:function(){return g},kt:function(){return p}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function u(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),s=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},g=function(e){var n=s(e.components);return r.createElement(l.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,g=u(e,["components","mdxType","originalType","parentName"]),d=s(t),p=a,m=d["".concat(l,".").concat(p)]||d[p]||c[p]||i;return t?r.createElement(m,o(o({ref:n},g),{},{components:t})):r.createElement(m,o({ref:n},g))}));function p(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=d;var u={};for(var l in n)hasOwnProperty.call(n,l)&&(u[l]=n[l]);u.originalType=e,u.mdxType="string"==typeof e?e:a,o[1]=u;for(var s=2;s<i;s++)o[s]=t[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1133:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return g},toc:function(){return c},default:function(){return p}});var r=t(7462),a=t(3366),i=(t(7294),t(3905)),o=t(4996),u=["components"],l={id:"debugging-runs-with-an-IDE",title:"Debugging QA-Board' runs in an IDE",sidebar_label:"Debugging with IDEs"},s=void 0,g={unversionedId:"debugging-runs-with-an-IDE",id:"debugging-runs-with-an-IDE",title:"Debugging QA-Board' runs in an IDE",description:"Debugging with PyCharm",source:"@site/docs/debugging-runs-with-an-IDE.md",sourceDirName:".",slug:"/debugging-runs-with-an-IDE",permalink:"/qaboard/docs/debugging-runs-with-an-IDE",editUrl:"https://github.com/Samsung/qaboard/edit/master/website/docs/docs/debugging-runs-with-an-IDE.md",tags:[],version:"current",frontMatter:{id:"debugging-runs-with-an-IDE",title:"Debugging QA-Board' runs in an IDE",sidebar_label:"Debugging with IDEs"},sidebar:"docs",previous:{title:"Deep Learning & MLOps",permalink:"/qaboard/docs/deep-learning"},next:{title:"Metadata & External Databases",permalink:"/qaboard/docs/metadata-integration-external-databases"}},c=[{value:"Debugging with PyCharm",id:"debugging-with-pycharm",children:[],level:2},{value:"Debugging with VSCode",id:"debugging-with-vscode",children:[],level:2}],d={toc:c};function p(e){var n=e.components,t=(0,a.Z)(e,u);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"debugging-with-pycharm"},"Debugging with PyCharm"),(0,i.kt)("p",null,'Edit your "debug configurations" like this:'),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Module name:")," ",(0,i.kt)("inlineCode",{parentName:"li"},"qaboard")," ",(0,i.kt)("em",{parentName:"li"},'(make sure you select "module" not "script" in the dropdown menu).')),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Parameters:")," CLI parameters for ",(0,i.kt)("inlineCode",{parentName:"li"},"qa"),": ",(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"strong"},"run -i images/A.jpg")),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Working directory:")," Check it\u2019s defined as the directory with ",(0,i.kt)("em",{parentName:"li"},"qaboard.yaml"),'. If this directory happens to have a subfolder named "qaboard", use it.')),(0,i.kt)("img",{alt:"pyCharm setup",src:(0,o.Z)("img/pycharm-debugging-setup.png")}),(0,i.kt)("blockquote",null,(0,i.kt)("p",{parentName:"blockquote"},"In some cases you'll also need to define as environment variables ",(0,i.kt)("inlineCode",{parentName:"p"},"LC_ALL=en_US.utf8 LANG=en_US.utf8"))),(0,i.kt)("h2",{id:"debugging-with-vscode"},"Debugging with VSCode"),(0,i.kt)("p",null,"To configure debugging, the editor opens a file called ",(0,i.kt)("em",{parentName:"p"},"launch.json"),". You want to add configurations that look like those:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "name": "qaboard",\n  "type": "python",\n  "request": "launch",\n  "module": "qaboard",\n  "args": [\n    "--", // needed...\n    "--help",\n  ]\n},\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "--",\n  "--database",\n  ".",\n  "run",\n  "--input",\n  "tv/tv_GW1_9296x256_REMOSAIC_V1_FULL_X_HP_PDA1",\n}\n')),(0,i.kt)("p",null,"Here is a more in-depth review of your options at ",(0,i.kt)("a",{parentName:"p",href:"https://code.visualstudio.com/docs/python/debugging"},"https://code.visualstudio.com/docs/python/debugging")))}p.isMDXComponent=!0}}]);